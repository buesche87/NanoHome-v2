#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Standbykiller for NanoHome - sends OFF to topic if device falls below [W]
#/////////////////////////////////////////////////////////////////////////////////////

# Catch Parameters
device="$2"
description="$3"
maxpower="$4"

# Load config
source INSTALLDIR/config.cfg

# Get component description
component="$(grep $description $rootpath/devlist | cut -d'|' -f2 )"

# Environment
svcname="standbykiller_"$device"_"$component".service"
svclocation="/etc/systemd/system"
svcfile="$svclocation/$svcname"

#/////////////////////////////////////////////////////////////////////////////////////
# Add Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
if [ "$1" = "add" ]; then

	# check if service exists
	if test -f "$svcfile"; then

		statusmsg INPUT="ERROR" MSG="Bereits vorhanden"

	# create new service
	else

		# Load device compatibility
		source $rootpath/devcompatibility $device $component

		# Copy Service File from a template and modify it
		if $legacy; then
			svctemplate="$rootpath/service/standbykiller_legacy.service"
		else
			svctemplate="$rootpath/service/standbykiller_plus.service"
		fi

		cp $svctemplate $svcfile

		sed -i "s/-dev/$device/" $svcfile
		sed -i "s/-desc/$description/" $svcfile
		sed -i "s/-sbpwr/$maxpower/" $svcfile

		# Enable and Start Service
		systemctl daemon-reload
		systemctl start $svcname
		systemctl enable $svcname

		# Fill Standbykiller List
		echo "$description ($device): $maxpower W" >> $rootpath/killerlist

		# Show Message
		statusmsg INPUT="HEADER" MSG="Standbykiller aktiviert" COLOR="#c0fcb"
		statusmsg INPUT="MESSAGE" MSG="$description ($device): $maxpower W" COLOR="white"

	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Show Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "show" ]; then

	# Get entry from Standbykiller List
	if [ "$device" = "all" ]; then
		killerlist=$(cat $rootpath/killerlist)
	else
		killerlist=$(grep $device $rootpath/killerlist)
	fi

	# Print List
	if [ ! -z "$killerlist" ]; then
		statusmsg INPUT="HEADER" MSG="Standbykiller aktiv" COLOR="#c0fcb"
		statusmsg INPUT="MESSAGE" MSG="$killerlist" COLOR="white"
	else
		statusmsg INPUT="HEADER" MSG="Standbykiller inaktiv" COLOR="grey"
	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Remove Standbykiller
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "remove" ]; then

	# Remove service
	systemctl stop $svcname
	systemctl disable $svcname
	rm -r $svcfile
	systemctl daemon-reload

	# Remove from killerlist
	sed -i '/'$description'/d' $rootpath/killerlist

	# Show message
	statusmsg INPUT="HEADER" MSG="Standbykiller deaktiviert" COLOR="grey"
	statusmsg INPUT="MESSAGE" MSG="$description ($device)" COLOR="white"

#/////////////////////////////////////////////////////////////////////////////////////
# Error Exit
#/////////////////////////////////////////////////////////////////////////////////////
else
	statusmsg INPUT="ERROR" MSG="Eingabe pr√ºfen"
	exit 1
fi
