#!/bin/bash
#/////////////////////////////////////////////////////////////////////////////////////
# Multiswitch for NanoHome - multi-toggle devices
#/////////////////////////////////////////////////////////////////////////////////////

# Catch Parameters
device1="$2"
description1="$3"
device2="$4"
description2="$5"

# Load config
source INSTALLDIR/config.cfg

# Get component description
component1="$(grep $description1 $rootpath/devlist | cut -d'|' -f2 )"
component2="$(grep $description2 $rootpath/devlist | cut -d'|' -f2 )"

# Environment
multiswitchline="$description1 ($device1) -> $description2 ($device2)"
svcname="multiswitch_"$device1"_"$component1"_"$device2"_"$component2".service"
svclocation="/etc/systemd/system"
svcfile="$svclocation/$svcname"
svctemplate="$rootpath/service/multiswitch.service"

#/////////////////////////////////////////////////////////////////////////////////////
# Add Multiswitch
#/////////////////////////////////////////////////////////////////////////////////////
if [ "$1" = "add" ]; then

	# check if service exists
	if test -f "$svcfile"; then

		statusmsg INPUT="ERROR" MSG="Bereits vorhanden"

	# create service
	else

		# Load device compatibility
		source $rootpath/devcompatibility $device1 $component1
		dev1_command=$(echo $toggle_command)

		source $rootpath/devcompatibility $device2 $component2
		dev2_command=$(echo $toggle_command)

		# Copy Service File from a template and modify it
		cp $svctemplate $svcfile

		sed -i "s/-dev1/$device1/" $svcfile
		sed -i "s/-dev2/$device2/" $svcfile
		sed -i "s/-value1/$dev1_command/" $svcfile
		sed -i "s/-value2/$dev2_command/" $svcfile
		sed -i "s/-desc1/$description1/" $svcfile
		sed -i "s/-desc2/$description2/" $svcfile

		# Enable and Start Service
		systemctl daemon-reload
		systemctl start $svcname
		systemctl enable $svcname

		# Fill Multiswitch List
		echo "$multiswitchline" >> $rootpath/multilist

		# Show Message
		statusmsg INPUT="HEADER" MSG="Multiswitch aktiviert" COLOR="#c0fcb"
		statusmsg INPUT="MESSAGE" MSG="$multiswitchline" COLOR="white"

	fi


#/////////////////////////////////////////////////////////////////////////////////////
# Show Multiswitches
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "show" ]; then

	# Get entry from Multiswitch List
	if [ "$device1" = "all" ]; then
		multilist=$(cat $rootpath/multilist)
	else
		multilist=$(grep "$multiswitchline" $rootpath/multilist)
	fi

	# Print List
	if [ ! -z "$multilist" ]; then
		statusmsg INPUT="HEADER" MSG="Multiswitch aktiv" COLOR="#c0fcb"
		statusmsg INPUT="MESSAGE" MSG="$multilist" COLOR="white"
	else
		statusmsg INPUT="HEADER" MSG="Multiswitch inaktiv" COLOR="grey"
	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Remove Multiswitch
#/////////////////////////////////////////////////////////////////////////////////////
elif [ "$1" = "remove" ]; then

	if [ "$device2" == "" ]; then
		
		# Get all multiswitches with device to be removed
		svcline=$(ls $svclocation | grep multiswitch | grep $device1)

		if [ ! -z "$svcline" ]; then
		
			statusmsg INPUT="HEADER" MSG="Multiswitch gelöscht" COLOR="grey"
			
			# Delete every Multiswitch
			while IFS= read -r line
			do
				# Remove service
				systemctl stop "$line"
				systemctl disable "$line"
				rm -r "$svclocation/$line"
				systemctl daemon-reload
		
				# Get Parameters
				dev1="$(echo $line | cut -d'_' -f2 )"
				comp1="$(echo $line | cut -d'_' -f3 )"
				grep1=$dev1"|"$comp1
				desc1="$(grep $grep1 $rootpath/devlist | cut -d'|' -f3 )"
				dev2="$(echo $line | cut -d'_' -f4 )"
				comp2="$(echo $line | cut -d'_' -f5 )"
				grep2=$dev2"|"$comp2
				desc2="$(grep $grep2 $rootpath/devlist | cut -d'|' -f3 )"
				multiswitchline="$desc1 ($dev1) -> $desc2 ($dev2)"
				
				# Remove from multilist
				sed -i "/$multiswitchline/d" $rootpath/multilist
				
				# Show message
				statusmsg INPUT="MESSAGE" MSG="$multiswitchline" COLOR="white"

			done <<< "$svcline"
		fi

	else

		# Remove service
		systemctl stop $svcname
		systemctl disable $svcname
		rm -r $svcfile
		systemctl daemon-reload

		# Remove from multilist
		sed -i "/$multiswitchline/d" $rootpath/multilist

		# Show message
		statusmsg INPUT="HEADER" MSG="Multiswitch gelöscht" COLOR="grey"
		statusmsg INPUT="MESSAGE" MSG="$multiswitchline" COLOR="white"
	fi

#/////////////////////////////////////////////////////////////////////////////////////
# Error Exit
#/////////////////////////////////////////////////////////////////////////////////////
else
	statusmsg INPUT="ERROR" MSG="Eingabe prüfen"
	exit 1
fi
